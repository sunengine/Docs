(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{225:function(t,n,e){"use strict";e.r(n);var s=e(28),i=Object(s.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"запуск-на-nginx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#запуск-на-nginx"}},[t._v("#")]),t._v(" Запуск на Nginx")]),t._v(" "),e("p",[t._v('Серверная и клиентская части запускаются на разных конечных точках, например клиентская часть "mysite.site", серверная часть "mysite.site/api".')]),t._v(" "),e("h3",{attrs:{id:"https"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" HTTPS")]),t._v(" "),e("p",[t._v("server {\nlisten 443 http2;      # https port\nlisten [::]:443 http2; # IP v6")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('   server_name mysite.site; # домен\n\n   charset utf-8;\n\n   ssl on;  # включаем ssl\n   ssl_certificate /etc/ssl/mysite.site/mysite.site.crt;        # Путь к ssl сертификату\n   ssl_certificate_key /etc/ssl/mysite.site/mysite.site.key;    # Путь к ключу сертификата gzip on; # включаем gzip архивацию потока данных\n\n   gzip_buffers 16 8k;\n   gzip_comp_level 6;\n   gzip_http_version 1.1;\n   gzip_min_length 256;\n   gzip_proxied any;\n   gzip_vary on;\n   gzip_types text/xml application/atom+xml application/rss+xml application/xhtml+xml text/javascript application/javascript\n   application/x-javascript text/x-json application/json application/x-web-app-manifest+json text/css text/plain\n   text/html font/opentype application/x-font-ttf image/x-icon image/svg+xml;\n   gzip_disable "msie6";\n\n   add_header X-Frame-Options "SAMEORIGIN";\n   add_header X-XSS-Protection "1; mode=block";\n   add_header X-Content-Type-Options "nosniff";\n\n   location / {    # Endpoint для клиентской части\n          root /site/mysite.site/wwwroot;\n          try_files $uri $uri/ /index.html;   # если файл не найден - возвращаем index.html\n\n          open_file_cache max=1000 inactive=20s; # кеширование файлов клиента на сервере\n          open_file_cache_valid 30s;\n          open_file_cache_min_uses 2;\n          open_file_cache_errors on;\n\n          # кеширование в браузере\n          location ~ \\.(js|json|css|svg|svgz|eot|otf|woff|woff2|ttf|rss|atom|ico|jpg|jpeg|gif|png)$ {\n                 expires 14d; # хранить кеш 14 дней\n          }\n   }\n\n   location /api/ {    # Endpoint для серверной части. Работает как reverse proxy отправляя запросы в Kestrel работающим отдельным процессом.\n          proxy_pass http://localhost:5000/; # Порт должен соответствовать настройкам kestrel в SunEngine.json\n          client_max_body_size 11M;  # максимальный размер тела запроса, который допускает Nginx ~= максимальный размер для upload файла\n   }\n')])])]),e("p",[t._v("server {  # редирект в случае входа через http\nlisten 80;\nlisten [::]:80;")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("   server_name mysite.site;\n   return 301 https://$host$request_uri;\n")])])]),e("p",[t._v("}")]),t._v(" "),e("p",[t._v('Для работы необходимо запустить Kestrel сервис отдельным процессом.\nИнструкция в статье.\nПорт Kestrel в "/Config/SunEngine.json" должен совпадать с портом  конфигурации в nginx.')]),t._v(" "),e("h3",{attrs:{id:"http"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),e("p",[t._v("Использовать только для целей разработки или тестирования. Не использовать на production.")]),t._v(" "),e("p",[t._v("server {\nlisten 80; # http порт\nlisten [::]:80;")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v(' server_name mysite.site; # домен\n     \n add_header X-Frame-Options "SAMEORIGIN";\n add_header X-XSS-Protection "1; mode=block";\n add_header X-Content-Type-Options "nosniff";\n \n charset utf-8;\n     \n location / {    # Endpoint для клиентской части\n    root /site/mysite.site/wwwroot;\n    try_files $uri $uri/ /index.html;   # если файл не найден - возвращаем index.html\n }\n     \n location /api/ {    # Endpoint для серверной части. Работает как reverse proxy отправляя запросы в Kestrel работающий отдельным процессом.\n    proxy_pass  http://localhost:5000/;   # Порт должен соответствовать настройкам kestrel в "/Config/SunEngine.json"\n        \n    client_max_body_size 11M;  # максимальный размер тела запроса, который допускает Nginx ~= максимальный размер для upload файла  \n }\n')])])]),e("p",[t._v("}")]),t._v(" "),e("h3",{attrs:{id:"метки"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#метки"}},[t._v("#")]),t._v(" Метки:")]),t._v(" "),e("p",[t._v("deploy")]),t._v(" "),e("p",[t._v("http")]),t._v(" "),e("p",[t._v("https")]),t._v(" "),e("p",[t._v("nginx")]),t._v(" "),e("p",[t._v("production")]),t._v(" "),e("p",[t._v("server")])])}),[],!1,null,null,null);n.default=i.exports}}]);